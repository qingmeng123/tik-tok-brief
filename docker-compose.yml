version: '3'

services:
  #MySQL
  tik-tok-mysql:
    image: mysql
    environment:
      TZ: Asia/Shanghai
      MYSQL_ROOT_PASSWORD: root # root密码(修改要同时修改data/mysql/init/init.sql中的密码)
    restart: on-failure
    ports:
      - "3306:3306"
    volumes:
      - /home/project/data/tik_tok/mysql/data:/var/lib/mysql
      - /home/project/data/tik_tok/mysql/conf:/etc/mysql/conf.d/
      - ./deploy/sql/init:/docker-entrypoint-initdb.d/
    networks:
      - tik-tok-net

  #Redis
  tik-tok-redis:
    image: redis
    #command: redis-server --requirepass root # requirepass后为密码(可修改)
    ports:
      - "6379:6379"
    volumes:
      - /home/project/data/tik_tok/redis/data:/data
      - /home/project/data/tik_tok/redis/conf/redis.conf:/usr/local/etc/redis/redis.conf
    networks:
      - tik-tok-net

  #Etcd
  tik-tok-etcd:
    image: 'bitnami/etcd:latest'
    environment:
      - ALLOW_NONE_AUTHENTICATION=yes
      - ETCD_ADVERTISE_CLIENT_URLS=http://etcd:2379
    ports:
      - "2379:2379"
    networks:
      - tik-tok-net

  #file
  file-rpc:
    build:
      context: ./
      dockerfile: service/file/rpc/Dockerfile
    environment:
      TZ: Asia/Shanghai
    volumes:
      - /home/project/data/tik_tok/logs/file/rpc/logs/:/app/logs
      - /home/project/data/tik_tok/file/rpc/etc:/app/etc
    depends_on:
      - tik-tok-mysql
      - tik-tok-redis
      - tik-tok-etcd
    networks:
      - tik-tok-net

  #follow
  follow-rpc:
    build:
      context: ./
      dockerfile: service/follow/rpc/Dockerfile
    environment:
      TZ: Asia/Shanghai
    volumes:
      - /home/project/data/tik_tok/logs/follow/rpc/logs/:/app/logs
      - /home/project/data/tik_tok/follow/rpc/etc:/app/etc
    depends_on:
      - tik-tok-mysql
      - tik-tok-redis
      - tik-tok-etcd
    networks:
      - tik-tok-net

  #chat
  chat-rpc:
    build:
      context: ./
      dockerfile: service/chat/rpc/Dockerfile
    environment:
      TZ: Asia/Shanghai
    volumes:
      - /home/project/data/tik_tok/logs/chat/rpc/logs/:/app/logs
      - /home/project/data/tik_tok/chat/rpc/etc:/app/etc
    depends_on:
      - tik-tok-mysql
      - tik-tok-redis
      - tik-tok-etcd
    networks:
      - tik-tok-net

  #like
  like-rpc:
    build:
      context: ./
      dockerfile: service/like/rpc/Dockerfile
    environment:
      TZ: Asia/Shanghai
    volumes:
      - /home/project/data/tik_tok/logs/like/rpc/logs/:/app/logs
      - /home/project/data/tik_tok/like/rpc/etc:/app/etc
    depends_on:
      - tik-tok-mysql
      - tik-tok-redis
      - tik-tok-etcd
    networks:
      - tik-tok-net

  #comment
  comment-rpc:
    build:
      context: ./
      dockerfile: service/comment/rpc/Dockerfile
    environment:
      TZ: Asia/Shanghai
    volumes:
      - /home/project/data/tik_tok/logs/comment/rpc/logs/:/app/logs
      - /home/project/data/tik_tok/comment/rpc/etc:/app/etc
    depends_on:
      - tik-tok-mysql
      - tik-tok-redis
      - tik-tok-etcd
    networks:
      - tik-tok-net

  #user
  user-rpc:
    build:
      context: ./
      dockerfile: service/user/rpc/Dockerfile
    environment:
      TZ: Asia/Shanghai
    volumes:
      - /home/project/data/tik_tok/logs/user/rpc/logs/:/app/logs
      - /home/project/data/tik_tok/user/rpc/etc:/app/etc
    depends_on:
      - tik-tok-mysql
      - tik-tok-redis
      - tik-tok-etcd
      - follow-rpc
    networks:
      - tik-tok-net

  user-api:
    build:
      context: ./
      dockerfile: service/user/api/Dockerfile
    environment:
      TZ: Asia/Shanghai
    volumes:
      - /home/project/data/tik_tok/logs/user/api/logs/:/app/logs
      - /home/project/data/tik_tok/user/api/etc:/app/etc
    depends_on:
      - tik-tok-mysql
      - tik-tok-redis
      - tik-tok-etcd
      - user-rpc
      - follow-rpc
      - chat-rpc
    networks:
      - tik-tok-net


  #video
  video-rpc:
    build:
      context: ./
      dockerfile: service/video/rpc/Dockerfile
    environment:
      TZ: Asia/Shanghai
    volumes:
      - /home/project/data/tik_tok/logs/video/rpc/logs/:/app/logs
      - /home/project/data/tik_tok/video/rpc/etc:/app/etc
    depends_on:
      - tik-tok-mysql
      - tik-tok-redis
      - tik-tok-etcd
      - like-rpc
    networks:
      - tik-tok-net

  video-api:
    build:
      context: ./
      dockerfile: service/video/api/Dockerfile
    environment:
      TZ: Asia/Shanghai
    volumes:
      - /home/project/data/tik_tok/logs/video/api/logs/:/app/logs
      - /home/project/data/tik_tok/video/api/etc:/app/etc
    ports:
      - "9081:9081"
      - "8001:8001"
    depends_on:
      - tik-tok-mysql
      - tik-tok-redis
      - tik-tok-etcd
      - user-rpc
      - video-rpc
      - file-rpc
      - comment-rpc
      - like-rpc
    networks:
      - tik-tok-net

  #nginx
  nginx-gateway:
    image: nginx
    restart: always
    privileged: true
    environment:
      - TZ=Asia/Shanghai
    ports:
      - "8888:9999"
    volumes:
      - ./deploy/nginx/conf.d:/etc/nginx/conf.d
      - /home/project/data/tik_tok/nginx/log:/var/log/nginx
    networks:
      - tik-tok-net
    depends_on:
      - file-rpc
      - chat-rpc
      - follow-rpc
      - like-rpc
      - comment-rpc
      - user-rpc
      - video-rpc
      - user-api
      - video-api

  #prometheus
  prometheus:
    image: bitnami/prometheus
    environment:
      - TZ=${TZ}
    volumes:
      - ./prometheus/prometheus.yml:/opt/bitnami/prometheus/conf/prometheus.yml  # 将 prometheus 配置文件挂载到容器里
    ports:
      - "9010:9090"                     # 设置容器9010端口映射指定宿主机端口，用于宿主机访问可视化web
    restart: always
    networks:
      - tik-tok-net

networks:
  tik-tok-net:
    driver: bridge
