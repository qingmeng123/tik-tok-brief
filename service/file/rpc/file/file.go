// Code generated by goctl. DO NOT EDIT.
// Source: file.proto

package file

import (
	"context"

	"tik-tok-brief/service/file/rpc/proto/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	UploadVideoByCosReq  = pb.UploadVideoByCosReq
	UploadVideoByCosResp = pb.UploadVideoByCosResp

	File interface {
		UploadVideoByCos(ctx context.Context, in *UploadVideoByCosReq, opts ...grpc.CallOption) (*UploadVideoByCosResp, error)
		UploadVideoStreamByCos(ctx context.Context, opts ...grpc.CallOption) (pb.File_UploadVideoStreamByCosClient, error)
	}

	defaultFile struct {
		cli zrpc.Client
	}
)

func NewFile(cli zrpc.Client) File {
	return &defaultFile{
		cli: cli,
	}
}

func (m *defaultFile) UploadVideoByCos(ctx context.Context, in *UploadVideoByCosReq, opts ...grpc.CallOption) (*UploadVideoByCosResp, error) {
	client := pb.NewFileClient(m.cli.Conn())
	return client.UploadVideoByCos(ctx, in, opts...)
}

func (m *defaultFile) UploadVideoStreamByCos(ctx context.Context, opts ...grpc.CallOption) (pb.File_UploadVideoStreamByCosClient, error) {
	client := pb.NewFileClient(m.cli.Conn())
	return client.UploadVideoStreamByCos(ctx, opts...)
}
