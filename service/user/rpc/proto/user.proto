syntax = "proto3";

package user;

option go_package = "./pb";   // 指定生成的Go代码在你项目中的导入路径（即其package)

// 用户实体
message User {
  int64 userId = 1; // 用户id
  string username = 2; // 用户名
  string password=3;  //密码
  int64 followCount = 4; // 关注总数
  int64 followerCount = 5; // 粉丝总数
  bool isFollow = 6; // true-已关注，false-未关注
  int64 totalFavorited = 7; //获赞数量
  int64 workCount = 8; //作品数量
  int64 favoriteCount = 9; //点赞数量
  int64 createTime=10;    //创建时间
}

//用户注册请求
message RegisterReq{
  string username=1;
  string password=2;
}

//用户注册响应
message RegisterResp{
  int64 userID=1;
  string token=2;
}

//用户登录请求
message LoginReq{
  string username=1;
  string password=2;
}
//用户登录响应
message LoginResp{
  int64 userId = 1;
  string token = 2;
}

//获取用户请求
message GetUserReq{
  int64 userID=1;
}

//获取用户响应
message GetUserResp{
  User user=1;
}

//获取token请求
message GenerateTokenReq{
  int64 userID=1;
}

//获取token响应
message GenerateTokenResp{
  string token=1;
}

// 批量获取用户请求体
message GetUserListByIdsReq {
  optional int64 userId = 1;
  repeated int64 ids = 2;
}
// 批量获取用户返回体
message GetUserListByIdsResp {
  repeated User users = 1;
}

message UpdateUserFollowerCountReq{
  int64 userId=1;
  int64 number=2;
}
message UpdateUserFollowerCountResp{}

message UpdateUserFollowCountReq{
  int64 userId=1;
  int64 number=2;
}
message UpdateUserFollowCountResp{}

message UpdateUserWorkCountReq{
  int64 userId=1;
  int64 number=2;
}
message UpdateUserWorkCountResp{}

message FollowTxnReq{
  int64 userId=1;
  int64 toUserId=2;
  int32 actionType=3;
}

message FollowTxnResp{}

service user{
  //用户注册
  rpc Register(RegisterReq)returns(RegisterResp);

  //用户登录
  rpc Login(LoginReq)returns(LoginResp);

  //获取用户
  rpc GetUser(GetUserReq)returns(GetUserResp);

  //获取token
  rpc GenerateToken(GenerateTokenReq)returns(GenerateTokenResp);

  // 批量获取用户信息
  rpc GetUserListByIds(GetUserListByIdsReq) returns (GetUserListByIdsResp);

  //更新用户粉丝数
  rpc UpdateUserFollowerCount(UpdateUserFollowerCountReq)returns(UpdateUserFollowerCountResp);
  //更新用户关注数
  rpc UpdateUserFollowCount(UpdateUserFollowCountReq)returns(UpdateUserFollowCountResp);
  //更新用户作品数
  rpc UpdateUserWorkCount(UpdateUserWorkCountReq)returns(UpdateUserWorkCountResp);

  //关注操作（事务处理）
  rpc FollowTxn(FollowTxnReq)returns(FollowTxnResp);
  //关注操作回滚（事务处理）
  rpc FollowRevertTxn(FollowTxnReq)returns(FollowTxnResp);
}