// Code generated by goctl. DO NOT EDIT.
// Source: user.proto

package server

import (
	"context"

	"tik-tok-brief/service/user/rpc/internal/logic"
	"tik-tok-brief/service/user/rpc/internal/svc"
	"tik-tok-brief/service/user/rpc/proto/pb"
)

type UserServer struct {
	svcCtx *svc.ServiceContext
	pb.UnimplementedUserServer
}

func NewUserServer(svcCtx *svc.ServiceContext) *UserServer {
	return &UserServer{
		svcCtx: svcCtx,
	}
}

// 用户注册
func (s *UserServer) Register(ctx context.Context, in *pb.RegisterReq) (*pb.RegisterResp, error) {
	l := logic.NewRegisterLogic(ctx, s.svcCtx)
	return l.Register(in)
}

// 用户登录
func (s *UserServer) Login(ctx context.Context, in *pb.LoginReq) (*pb.LoginResp, error) {
	l := logic.NewLoginLogic(ctx, s.svcCtx)
	return l.Login(in)
}

// 获取用户
func (s *UserServer) GetUser(ctx context.Context, in *pb.GetUserReq) (*pb.GetUserResp, error) {
	l := logic.NewGetUserLogic(ctx, s.svcCtx)
	return l.GetUser(in)
}

// 获取token
func (s *UserServer) GenerateToken(ctx context.Context, in *pb.GenerateTokenReq) (*pb.GenerateTokenResp, error) {
	l := logic.NewGenerateTokenLogic(ctx, s.svcCtx)
	return l.GenerateToken(in)
}

// 批量获取用户信息
func (s *UserServer) GetUserListByIds(ctx context.Context, in *pb.GetUserListByIdsReq) (*pb.GetUserListByIdsResp, error) {
	l := logic.NewGetUserListByIdsLogic(ctx, s.svcCtx)
	return l.GetUserListByIds(in)
}

// 更新用户粉丝数
func (s *UserServer) UpdateUserFollowerCount(ctx context.Context, in *pb.UpdateUserFollowerCountReq) (*pb.UpdateUserFollowerCountResp, error) {
	l := logic.NewUpdateUserFollowerCountLogic(ctx, s.svcCtx)
	return l.UpdateUserFollowerCount(in)
}

// 更新用户关注数
func (s *UserServer) UpdateUserFollowCount(ctx context.Context, in *pb.UpdateUserFollowCountReq) (*pb.UpdateUserFollowCountResp, error) {
	l := logic.NewUpdateUserFollowCountLogic(ctx, s.svcCtx)
	return l.UpdateUserFollowCount(in)
}

// 更新用户作品数
func (s *UserServer) UpdateUserWorkCount(ctx context.Context, in *pb.UpdateUserWorkCountReq) (*pb.UpdateUserWorkCountResp, error) {
	l := logic.NewUpdateUserWorkCountLogic(ctx, s.svcCtx)
	return l.UpdateUserWorkCount(in)
}
